(self.webpackChunkdyabp=self.webpackChunkdyabp||[]).push([[4073],{6804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>G});var a=n(8133);const r=(0,a.uE)('<h1 id="page"><a class="header-anchor" href="#page">#</a> Page</h1><p>VuePress is markdown-centered. Each markdown file inside your project is a standalone page.</p><h2 id="routing"><a class="header-anchor" href="#routing">#</a> Routing</h2><p>By default, the route path of a page is determined by the relative path of your markdown file.</p><p>Assuming this is the directory structure of your markdown files:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>└─ docs\n   ├─ guide\n   │  ├─ getting-started.md\n   │  └─ README.md\n   ├─ contributing.md\n   └─ README.md\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',6),o=(0,a.Uk)("Take the "),s=(0,a.Wm)("code",null,"docs",-1),l=(0,a.Uk)(" directory as your "),i=(0,a.Uk)("sourceDir"),d=(0,a.Uk)(", e.g. your are running "),u=(0,a.Wm)("code",null,"vuepress dev docs",-1),c=(0,a.Uk)(" command. Then the route paths of your markdown files would be:"),m=(0,a.uE)('<table><thead><tr><th>Relative Path</th><th>Route Path</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/contributing.md</code></td><td><code>/contributing.html</code></td></tr><tr><td><code>/guide/README.md</code></td><td><code>/guide/</code></td></tr><tr><td><code>/guide/page.md</code></td><td><code>/guide/page.html</code></td></tr></tbody></table><h2 id="frontmatter"><a class="header-anchor" href="#frontmatter">#</a> Frontmatter</h2>',2),p=(0,a.Uk)("A markdown file could contain a "),h={href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"},f=(0,a.Uk)("YAML"),k=(0,a.Uk)(" frontmatter. The frontmatter must be at the top of the Markdown file and must be wrapped with a couple of triple-dashed lines. Here is a basic example:"),g=(0,a.uE)('<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">---</span>\n<span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US\n<span class="token key atrule">title</span><span class="token punctuation">:</span> Title of this page\n<span class="token key atrule">description</span><span class="token punctuation">:</span> Description of this page\n<span class="token punctuation">---</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',1),b=(0,a.Uk)("You must have noticed that those fields are similar with the "),w=(0,a.Uk)("Site Config"),U=(0,a.Uk)(" of in the "),y=(0,a.Uk)("Config File"),W=(0,a.Uk)(". You can override "),v=(0,a.Wm)("code",null,"lang",-1),M=(0,a.Uk)(", "),E=(0,a.Wm)("code",null,"title",-1),R=(0,a.Uk)(", "),x=(0,a.Wm)("code",null,"description",-1),P=(0,a.Uk)(", etc., of current page via frontmatter. So you can take frontmatter as page scope config."),C=(0,a.Wm)("p",null,"Also, VuePress has built-in support for some frontmatter fields, and your theme may have its own special frontmatter, too.",-1),T={class:"custom-container tip"},A=(0,a.Wm)("p",{class:"custom-container-title"},"提示",-1),_=(0,a.Uk)("Check out the "),D=(0,a.Uk)("Frontmatter Reference"),V=(0,a.Uk)(" for a full list of VuePress built-in frontmatter."),F=(0,a.Uk)("Check out the "),L=(0,a.Uk)("Default Theme > Frontmatter Reference"),H=(0,a.Uk)(" for the frontmatter of default theme."),S=(0,a.Wm)("h2",{id:"content"},[(0,a.Wm)("a",{class:"header-anchor",href:"#content"},"#"),(0,a.Uk)(" Content")],-1),Y=(0,a.Wm)("p",null,[(0,a.Uk)("The main content of your page is written in Markdown. VuePress will firstly transform your Markdown to HTML code, then treat the HTML code as "),(0,a.Wm)("code",null,"<template>"),(0,a.Uk)(" of Vue SFC.")],-1),j=(0,a.Uk)("With the power of "),B={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},N=(0,a.Uk)("markdown-it"),O=(0,a.Uk)(" and Vue template syntax, the basic Markdown can be extended a lot. Next, check out the "),q=(0,a.Uk)("Markdown"),z=(0,a.Uk)(" guide for all the extensions of Markdown in VuePress."),G={render:function(e,t){const n=(0,a.up)("RouterLink"),G=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[r,(0,a.Wm)("p",null,[o,s,l,(0,a.Wm)(n,{to:"/en/reference/cli.html"},{default:(0,a.w5)((()=>[i])),_:1}),d,u,c]),m,(0,a.Wm)("p",null,[p,(0,a.Wm)("a",h,[f,(0,a.Wm)(G)]),k]),g,(0,a.Wm)("p",null,[b,(0,a.Wm)(n,{to:"/en/guide/configuration.html#site-config"},{default:(0,a.w5)((()=>[w])),_:1}),U,(0,a.Wm)(n,{to:"/en/guide/configuration.html#config-file"},{default:(0,a.w5)((()=>[y])),_:1}),W,v,M,E,R,x,P]),C,(0,a.Wm)("div",T,[A,(0,a.Wm)("p",null,[_,(0,a.Wm)(n,{to:"/en/reference/frontmatter.html"},{default:(0,a.w5)((()=>[D])),_:1}),V]),(0,a.Wm)("p",null,[F,(0,a.Wm)(n,{to:"/en/reference/default-theme/frontmatter.html"},{default:(0,a.w5)((()=>[L])),_:1}),H])]),S,Y,(0,a.Wm)("p",null,[j,(0,a.Wm)("a",B,[N,(0,a.Wm)(G)]),O,(0,a.Wm)(n,{to:"/en/guide/markdown.html"},{default:(0,a.w5)((()=>[q])),_:1}),z])],64)}}},9102:(e,t,n)=>{"use strict";n.r(t),n.d(t,{data:()=>a});const a={key:"v-3e9371aa",path:"/en/guide/page.html",title:"Page",frontmatter:{},excerpt:"",headers:[{level:2,title:"Routing",slug:"routing",children:[]},{level:2,title:"Frontmatter",slug:"frontmatter",children:[]},{level:2,title:"Content",slug:"content",children:[]}],filePathRelative:"en/guide/page.md",git:{updatedTime:1612069518e3,contributors:[]}}}}]);