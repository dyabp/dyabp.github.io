(self.webpackChunkdyabp=self.webpackChunkdyabp||[]).push([[1428],{5355:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>ls});var e=a(8133);const p=(0,e.Wm)("h1",{id:"部署"},[(0,e.Wm)("a",{class:"header-anchor",href:"#部署"},"#"),(0,e.Uk)(" 部署")],-1),l=(0,e.Wm)("p",null,"下述的指南基于以下条件：",-1),t=(0,e.Wm)("li",null,[(0,e.Uk)("Markdown 源文件放置在你项目的 "),(0,e.Wm)("code",null,"docs"),(0,e.Uk)(" 目录；")],-1),o=(0,e.Wm)("li",null,[(0,e.Uk)("使用的是默认的构建输出目录 ("),(0,e.Wm)("code",null,".vuepress/dist"),(0,e.Uk)(") ；")],-1),c=(0,e.Uk)("使用 "),r={href:"https://classic.yarnpkg.com/zh-Hans/",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("Yarn classic"),i=(0,e.Uk)(" 作为包管理器，当然也可以使用 NPM 。"),k=(0,e.Wm)("li",null,[(0,e.Uk)("VuePress 作为项目依赖安装，并在 "),(0,e.Wm)("code",null,"package.json"),(0,e.Uk)(" 中配置了如下脚本：")],-1),m=(0,e.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build docs&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="github-pages"><a class="header-anchor" href="#github-pages">#</a> GitHub Pages</h2>',2),b=(0,e.Uk)("设置正确的 "),d=(0,e.Uk)("base"),g=(0,e.Uk)(" 选项。"),h=(0,e.uE)("<p>如果你准备发布到 <code>https://&lt;USERNAME&gt;.github.io/</code> ，你可以省略这一步，因为 <code>base</code> 默认就是 <code>&quot;/&quot;</code> 。</p><p>如果你准备发布到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code> ，也就是说你的仓库地址是 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code> ，则将 <code>base</code> 设置为 <code>&quot;/&lt;REPO&gt;/&quot;</code>。</p>",2),W=(0,e.Uk)("选项你想要使用的 CI 工具。这里我们以 "),y={href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("GitHub Actions"),v=(0,e.Uk)(" 为例。"),U=(0,e.uE)('<p>创建 <code>.github/workflows/docs.yml</code> 文件来配置工作流。</p><details class="custom-container details"><summary>点击展开配置样例</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> docs\n\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token comment"># 每当 push 到 main 分支时触发部署</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span>\n  <span class="token comment"># 手动触发部署</span>\n  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>\n\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">docs</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录</span>\n          <span class="token key atrule">fetch-depth</span><span class="token punctuation">:</span> <span class="token number">0</span>\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Node.js\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># 选择要使用的 node 版本</span>\n          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">&#39;14&#39;</span>\n\n      <span class="token comment"># 缓存 node_modules</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Cache dependencies\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v2\n        <span class="token key atrule">id</span><span class="token punctuation">:</span> yarn<span class="token punctuation">-</span>cache\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n            **/node_modules</span>\n          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> runner.os <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">-</span>yarn<span class="token punctuation">-</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> hashFiles(&#39;<span class="token important">**/yarn.lock&#39;)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">restore-keys</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n            ${{ runner.os }}-yarn-</span>\n\n      <span class="token comment"># 如果缓存没有命中，安装依赖</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies\n        <span class="token key atrule">if</span><span class="token punctuation">:</span> steps.yarn<span class="token punctuation">-</span>cache.outputs.cache<span class="token punctuation">-</span>hit <span class="token tag">!=</span> &#39;true&#39;\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn <span class="token punctuation">-</span><span class="token punctuation">-</span>frozen<span class="token punctuation">-</span>lockfile\n\n      <span class="token comment"># 运行构建脚本</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build VuePress site\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn docs<span class="token punctuation">:</span>build\n\n      <span class="token comment"># 查看 workflow 的文档来获取更多信息</span>\n      <span class="token comment"># @see https://github.com/crazy-max/ghaction-github-pages</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> crazy<span class="token punctuation">-</span>max/ghaction<span class="token punctuation">-</span>github<span class="token punctuation">-</span>pages@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># 部署到 gh-pages 分支</span>\n          <span class="token key atrule">target_branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages\n          <span class="token comment"># 部署目录为 VuePress 的默认输出目录</span>\n          <span class="token key atrule">build_dir</span><span class="token punctuation">:</span> docs/.vuepress/dist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div></details>',2),E={class:"custom-container tip"},_=(0,e.Wm)("p",{class:"custom-container-title"},"提示",-1),q=(0,e.Uk)("请参考 "),w={href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("GitHub Pages 官方指南"),P=(0,e.Uk)(" 来获取更多信息。"),C=(0,e.Wm)("h2",{id:"gitlab-pages"},[(0,e.Wm)("a",{class:"header-anchor",href:"#gitlab-pages"},"#"),(0,e.Uk)(" GitLab Pages")],-1),R=(0,e.Uk)("设置正确的 "),B=(0,e.Uk)("base"),H=(0,e.Uk)(" 选项。"),N=(0,e.uE)("<p>如果你准备发布到 <code>https://&lt;USERNAME&gt;.gitlab.io/</code> ，你可以省略这一步，因此 <code>base</code> 默认就是 <code>&quot;/&quot;</code> 。</p><p>如果你准备发布到 <code>https://&lt;USERNAME&gt;.gitlab.io/&lt;REPO&gt;/</code> ，也就是说你的仓库地址是 <code>https://gitlab.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code> ，则将 <code>base</code> 设置为 <code>&quot;/&lt;REPO&gt;/&quot;</code>。</p>",2),x=(0,e.Uk)("创建 "),A=(0,e.Wm)("code",null,".gitlab-ci.yml",-1),G=(0,e.Uk)(" 文件来配置 "),S={href:"https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/",target:"_blank",rel:"noopener noreferrer"},V=(0,e.Uk)("GitLab CI"),L=(0,e.Uk)(" 工作流。"),I=(0,e.uE)('<details class="custom-container details"><summary>点击展开配置样例</summary><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># 选择你要使用的 docker 镜像</span>\n<span class="token key atrule">image</span><span class="token punctuation">:</span> node<span class="token punctuation">:</span>14<span class="token punctuation">-</span>buster\n\n<span class="token key atrule">pages</span><span class="token punctuation">:</span>\n  <span class="token comment"># 每当 push 到 main 分支时触发部署</span>\n  <span class="token key atrule">only</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> main\n\n  <span class="token comment"># 缓存 node_modules</span>\n  <span class="token key atrule">cache</span><span class="token punctuation">:</span>\n    <span class="token key atrule">paths</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> node_modules/\n\n  <span class="token comment"># 安装依赖并运行构建脚本</span>\n  <span class="token key atrule">script</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> yarn <span class="token punctuation">-</span><span class="token punctuation">-</span>frozen<span class="token punctuation">-</span>lockfile\n  <span class="token punctuation">-</span> yarn docs<span class="token punctuation">:</span>build <span class="token punctuation">-</span><span class="token punctuation">-</span>dest public\n\n  <span class="token key atrule">artifacts</span><span class="token punctuation">:</span>\n    <span class="token key atrule">paths</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> public\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></details>',1),O={class:"custom-container tip"},M=(0,e.Wm)("p",{class:"custom-container-title"},"提示",-1),F=(0,e.Uk)("请参考 "),z={href:"https://docs.gitlab.com/ce/user/project/pages/#getting-started",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("GitLab Pages 官方指南"),Y=(0,e.Uk)(" 来获取更多信息。"),$=(0,e.Wm)("h2",{id:"google-firebase"},[(0,e.Wm)("a",{class:"header-anchor",href:"#google-firebase"},"#"),(0,e.Uk)(" Google Firebase")],-1),T=(0,e.Uk)("请确保你已经安装了 "),J={href:"https://www.npmjs.com/package/firebase-tools",target:"_blank",rel:"noopener noreferrer"},K=(0,e.Uk)("firebase-tools"),Q=(0,e.Uk)("。"),X=(0,e.uE)('<li><p>在你项目的根目录下创建 <code>firebase.json</code> 和 <code>.firebaserc</code>，并包含以下内容：</p><p><code>firebase.json</code>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;hosting&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;public&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./docs/.vuepress/dist&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>.firebaserc</code>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;projects&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;YOUR_FIREBASE_ID&gt;&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>在执行了 <code>yarn docs:build</code> 或 <code>npm run docs:build</code> 后, 使用 <code>firebase deploy</code> 指令来部署。</p></li>',2),Z={class:"custom-container tip"},nn=(0,e.Wm)("p",{class:"custom-container-title"},"提示",-1),sn=(0,e.Uk)("请参考 "),an={href:"https://firebase.google.com/docs/cli",target:"_blank",rel:"noopener noreferrer"},en=(0,e.Uk)("Firebase CLI 官方指南"),pn=(0,e.Uk)(" 来获取更多信息。"),ln=(0,e.Wm)("h2",{id:"heroku"},[(0,e.Wm)("a",{class:"header-anchor",href:"#heroku"},"#"),(0,e.Uk)(" Heroku")],-1),tn=(0,e.Uk)("首先安装 "),on={href:"https://devcenter.heroku.com/articles/heroku-cli",target:"_blank",rel:"noopener noreferrer"},cn=(0,e.Uk)("Heroku CLI"),rn=(0,e.Uk)("；"),un={href:"https://signup.heroku.com",target:"_blank",rel:"noopener noreferrer"},kn=(0,e.Uk)("在这里"),mn=(0,e.Uk)(" 注册一个 Heroku 账号；"),bn=(0,e.uE)('<li><p>运行 <code>heroku login</code> 并填写你的 Heroku 认证信息：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>heroku login\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>在你的项目根目录中，创建一个名为 <code>static.json</code> 的文件，并包含下述内容：</p><p><code>static.json</code>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;root&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./docs/.vuepress/dist&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>',2),dn=(0,e.Uk)("这里是你项目的配置，请参考 "),gn={href:"https://github.com/heroku/heroku-buildpack-static",target:"_blank",rel:"noopener noreferrer"},hn=(0,e.Uk)("heroku-buildpack-static"),Wn=(0,e.Uk)(" 来获取更多信息。"),yn=(0,e.Wm)("h2",{id:"netlify"},[(0,e.Wm)("a",{class:"header-anchor",href:"#netlify"},"#"),(0,e.Uk)(" Netlify")],-1),fn=(0,e.Uk)("前往 "),vn={href:"https://netlify.com",target:"_blank",rel:"noopener noreferrer"},Un=(0,e.Uk)("Netlify"),En=(0,e.Uk)(" ，从 GitHub 创建一个新项目，并进行如下配置："),_n=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("strong",null,"Build Command:"),(0,e.Uk)(),(0,e.Wm)("code",null,"yarn docs:build")]),(0,e.Wm)("li",null,[(0,e.Wm)("strong",null,"Publish directory:"),(0,e.Uk)(),(0,e.Wm)("code",null,"docs/.vuepress/dist")])],-1),qn=(0,e.Uk)("设置 "),wn={href:"https://docs.netlify.com/configure-builds/environment-variables",target:"_blank",rel:"noopener noreferrer"},jn=(0,e.Uk)("Environment variables"),Pn=(0,e.Uk)(" 来选择 Node 版本："),Cn=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"NODE_VERSION"),(0,e.Uk)(": 14")])],-1),Rn=(0,e.Wm)("li",null,[(0,e.Wm)("p",null,"点击 deploy 按钮。")],-1),Bn=(0,e.Wm)("h2",{id:"vercel"},[(0,e.Wm)("a",{class:"header-anchor",href:"#vercel"},"#"),(0,e.Uk)(" Vercel")],-1),Hn=(0,e.Uk)("请查看 "),Nn={href:"https://vercel.com/guides/deploying-vuepress-to-vercel",target:"_blank",rel:"noopener noreferrer"},xn=(0,e.Uk)("Creating and Deploying a VuePress App with Vercel"),An=(0,e.Uk)("."),Gn=(0,e.Wm)("h2",{id:"云开发-cloudbase"},[(0,e.Wm)("a",{class:"header-anchor",href:"#云开发-cloudbase"},"#"),(0,e.Uk)(" 云开发 CloudBase")],-1),Sn={href:"https://cloudbase.net/?site=vuepress",target:"_blank",rel:"noopener noreferrer"},Vn=(0,e.Uk)("云开发 CloudBase"),Ln=(0,e.Uk)(" 是一个云原生一体化的 Serverless 云平台，支持静态网站、容器等多种托管能力，并提供简便的部署工具 "),In={href:"https://cloudbase.net/framework.html?site=vuepress",target:"_blank",rel:"noopener noreferrer"},On=(0,e.Uk)("CloudBase Framework"),Mn=(0,e.Uk)(" 来一键部署应用。"),Fn=(0,e.uE)('<li><p>全局安装 CloudBase CLI ：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g @cloudbase/cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>',1),zn=(0,e.Uk)("在项目根目录运行以下命令一键部署 VuePress 应用，在部署之前可以先 "),Dn={href:"https://console.cloud.tencent.com/tcb/env/index?tdl_anchor=ad&tdl_site=vuejs",target:"_blank",rel:"noopener noreferrer"},Yn=(0,e.Uk)("开通环境"),$n=(0,e.Uk)("："),Tn=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>cloudbase init --without-template\ncloudbase framework:deploy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>CloudBase CLI 首先会跳转到控制台进行登录授权，然后将会交互式进行确认。</p><p>确认信息后会立即进行部署，部署完成后，可以获得一个自动 SSL，CDN 加速的网站应用，你也可以搭配使用 GitHub Action 来持续部署 GitHub 上的 VuePress 应用。</p><p>也可以使用 <code>cloudbase init --template vuepress</code> 快速创建和部署一个新的 VuePress 应用。</p>',4),Jn={class:"custom-container tip"},Kn=(0,e.Wm)("p",{class:"custom-container-title"},"提示",-1),Qn=(0,e.Uk)("更多详细信息请查看 CloudBase Framework 的"),Xn={href:"https://github.com/TencentCloudBase/cloudbase-framework?site=vuepress#%E9%A1%B9%E7%9B%AE%E7%A4%BA%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},Zn=(0,e.Uk)("部署项目示例"),ns=(0,e.Wm)("h2",{id:"_21-云盒子"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_21-云盒子"},"#"),(0,e.Uk)(" 21 云盒子")],-1),ss=(0,e.Uk)("请查看 "),as={href:"https://www.21yunbox.com/docs/#/deploy-vuepress",target:"_blank",rel:"noopener noreferrer"},es=(0,e.Uk)("21 云盒子 - 部署一个 VuePress 静态网页"),ps=(0,e.Uk)("。"),ls={render:function(n,s){const a=(0,e.up)("OutboundLink"),ls=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,l,(0,e.Wm)("ul",null,[t,o,(0,e.Wm)("li",null,[c,(0,e.Wm)("a",r,[u,(0,e.Wm)(a)]),i]),k]),m,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[b,(0,e.Wm)(ls,{to:"/reference/config.html#base"},{default:(0,e.w5)((()=>[d])),_:1}),g]),h]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[W,(0,e.Wm)("a",y,[f,(0,e.Wm)(a)]),v]),U])]),(0,e.Wm)("div",E,[_,(0,e.Wm)("p",null,[q,(0,e.Wm)("a",w,[j,(0,e.Wm)(a)]),P])]),C,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[R,(0,e.Wm)(ls,{to:"/reference/config.html#base"},{default:(0,e.w5)((()=>[B])),_:1}),H]),N]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[x,A,G,(0,e.Wm)("a",S,[V,(0,e.Wm)(a)]),L]),I])]),(0,e.Wm)("div",O,[M,(0,e.Wm)("p",null,[F,(0,e.Wm)("a",z,[D,(0,e.Wm)(a)]),Y])]),$,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[T,(0,e.Wm)("a",J,[K,(0,e.Wm)(a)]),Q])]),X]),(0,e.Wm)("div",Z,[nn,(0,e.Wm)("p",null,[sn,(0,e.Wm)("a",an,[en,(0,e.Wm)(a)]),pn])]),ln,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[tn,(0,e.Wm)("a",on,[cn,(0,e.Wm)(a)]),rn])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",un,[kn,(0,e.Wm)(a)]),mn])]),bn]),(0,e.Wm)("p",null,[dn,(0,e.Wm)("a",gn,[hn,(0,e.Wm)(a)]),Wn]),yn,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[fn,(0,e.Wm)("a",vn,[Un,(0,e.Wm)(a)]),En]),_n]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[qn,(0,e.Wm)("a",wn,[jn,(0,e.Wm)(a)]),Pn]),Cn]),Rn]),Bn,(0,e.Wm)("p",null,[Hn,(0,e.Wm)("a",Nn,[xn,(0,e.Wm)(a)]),An]),Gn,(0,e.Wm)("p",null,[(0,e.Wm)("a",Sn,[Vn,(0,e.Wm)(a)]),Ln,(0,e.Wm)("a",In,[On,(0,e.Wm)(a)]),Mn]),(0,e.Wm)("ol",null,[Fn,(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[zn,(0,e.Wm)("a",Dn,[Yn,(0,e.Wm)(a)]),$n]),Tn])]),(0,e.Wm)("div",Jn,[Kn,(0,e.Wm)("p",null,[Qn,(0,e.Wm)("a",Xn,[Zn,(0,e.Wm)(a)])])]),ns,(0,e.Wm)("p",null,[ss,(0,e.Wm)("a",as,[es,(0,e.Wm)(a)]),ps])],64)}}},4902:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-e8a66a70",path:"/guide/deployment.html",title:"部署",frontmatter:{},excerpt:"",headers:[{level:2,title:"GitHub Pages",slug:"github-pages",children:[]},{level:2,title:"GitLab Pages",slug:"gitlab-pages",children:[]},{level:2,title:"Google Firebase",slug:"google-firebase",children:[]},{level:2,title:"Heroku",slug:"heroku",children:[]},{level:2,title:"Netlify",slug:"netlify",children:[]},{level:2,title:"Vercel",slug:"vercel",children:[]},{level:2,title:"云开发 CloudBase",slug:"云开发-cloudbase",children:[]},{level:2,title:"21 云盒子",slug:"_21-云盒子",children:[]}],filePathRelative:"guide/deployment.md",git:{updatedTime:1612069518e3,contributors:[]}}}}]);